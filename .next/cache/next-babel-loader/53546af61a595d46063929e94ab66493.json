{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/taek2/dev/zeroCho_project/react-nextJS/components/LoginForm.js\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/Link\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\";\nimport { loginAction } from \"../reducers/user\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ButtonWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"])));\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n\"])));\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1]; // Input 컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 쓰는게 최적화에 좋다\n  // useCallback과 useMemo의 차이는??\n  // useCallback은 함수를 캐싱하는 훅이고, useMemo는 값을 캐싱하는 훅이다.\n  // const onChangeId = useCallback((e) => {\n  //   setId(e.target.value);\n  // }, []);\n  // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n\n  var onsSbmitForm = useCallback(function () {\n    console.log(id, password);\n    dispatch(loginAction({\n      id: id,\n      password: password\n    }));\n  }, [id, password]); // 로그인 폼을 만들 때 라이브러리를 사용하는 것을 추천한다.\n\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onsSbmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-id\",\n        value: id,\n        onChange: onChangeId,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-id\",\n        type: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginForm, \"1qYlkg7gqWdpMeGQiakLhVVbxJI=\", false, function () {\n  return [useDispatch, useInput, useInput];\n});\n\n_c3 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["/Users/taek2/dev/zeroCho_project/react-nextJS/components/LoginForm.js"],"names":["React","useCallback","styled","Form","Input","Button","Link","PropTypes","useInput","loginAction","useDispatch","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","id","onChangeId","password","onChangePassword","onsSbmitForm","console","log","propTypes","setIsLoggedIn","func","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,aAAa,GAAGT,MAAM,CAACU,GAAV,4FAAnB;KAAMD,a;AAIN,IAAME,WAAW,GAAGX,MAAM,CAACC,IAAD,CAAT,2FAAjB;MAAMU,W;;AAIN,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADsB,kBAEGF,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,MAEfQ,EAFe;AAAA,MAEXC,UAFW;;AAAA,mBAGeT,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,MAGfU,QAHe;AAAA,MAGLC,gBAHK,kBAKtB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAGnB,WAAW,CAAC,YAAM;AACrCoB,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAgBE,QAAhB;AACAH,IAAAA,QAAQ,CAACN,WAAW,CAAC;AAAEO,MAAAA,EAAE,EAAFA,EAAF;AAAME,MAAAA,QAAQ,EAARA;AAAN,KAAD,CAAZ,CAAR;AACD,GAH+B,EAG7B,CAACF,EAAD,EAAKE,QAAL,CAH6B,CAAhC,CAhBsB,CAqBtB;;AACA,sBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAEJ,EAA7B;AAAiC,QAAA,QAAQ,EAAEC,UAA3C;AAAuD,QAAA,QAAQ;AAA/D;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAME;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEC,QAHT;AAIE,QAAA,QAAQ,EAAEC,gBAJZ;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,eAyBE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAsCD,CA5DD;;GAAML,S;UACaJ,W,EACQF,Q,EACYA,Q;;;MAHjCM,S;AA8DNA,SAAS,CAACS,SAAV,GAAsB;AACpBC,EAAAA,aAAa,EAAEjB,SAAS,CAACkB,IAAV,CAAeC;AADV,CAAtB;AAIA,eAAeZ,SAAf","sourcesContent":["import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/Link\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\";\n\nimport { loginAction } from \"../reducers/user\";\nimport { useDispatch } from \"react-redux\";\n\nconst ButtonWrapper = styled.div`\n  margin-top: 10px;\n`;\n\nconst FormWrapper = styled(Form)`\n  padding: 10px;\n`;\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [id, onChangeId] = useInput(\"\");\n  const [password, onChangePassword] = useInput(\"\");\n\n  // Input 컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 쓰는게 최적화에 좋다\n  // useCallback과 useMemo의 차이는??\n  // useCallback은 함수를 캐싱하는 훅이고, useMemo는 값을 캐싱하는 훅이다.\n  // const onChangeId = useCallback((e) => {\n  //   setId(e.target.value);\n  // }, []);\n\n  // const onChangePassword = useCallback((e) => {\n  //   setPassword(e.target.value);\n  // }, []);\n\n  const onsSbmitForm = useCallback(() => {\n    console.log(id, password);\n    dispatch(loginAction({ id, password }));\n  }, [id, password]);\n\n  // 로그인 폼을 만들 때 라이브러리를 사용하는 것을 추천한다.\n  return (\n    <FormWrapper onFinish={onsSbmitForm}>\n      <div>\n        <label htmlFor=\"user-id\">아이디</label>\n        <br />\n        <Input name=\"user-id\" value={id} onChange={onChangeId} required />\n      </div>\n      <div>\n        <label htmlFor=\"user-id\">비밀번호</label>\n        <br />\n        <Input\n          name=\"user-id\"\n          type=\"password\"\n          value={password}\n          onChange={onChangePassword}\n          required\n        />\n      </div>\n      {/* 인라인 스타일을 넣는 것은 너무나 안좋은 방법 */}\n      {/* 인라인 스타일은 리렌더링 될 때마다  객체를 새로 생성하게 되고 리액트는 객체끼리 비교해서 회면에 반영한다.*/}\n      {/* 이런 경우 인라인 스타일 부분에서 실제로 바뀐게 아무것도 없는데 리렌더링이 발생하게 됨 */}\n      {/* 그 이유는 객체는 새로 생성 될 때마다 서로 다른 값으로 인식하기 때문에 */}\n      {/* 그러므로 스타일 컴포넌트같은 css관련 라이브러리나 css 파일을 만들어서 스타일 적용을 해야함 */}\n      {/* 만약 스타일 컴포넌트로 적용하기가 싫다면??  useMemo를 사용해라 */}\n      {/* const style = useMemo(() => ({ marginTop: 10 }), []) */}\n      {/* 이렇게 사용하면 컴포넌트가 리렌더링이 된다 할지라도 같은 값을 유지하기 때문에 다시 렌덜링이 되지 않을 것 이다. */}\n      <ButtonWrapper>\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\n          로그인\n        </Button>\n        <Link href=\"/signup\">\n          <a>\n            <button>회원가입</button>\n          </a>\n        </Link>\n      </ButtonWrapper>\n    </FormWrapper>\n  );\n};\n\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}